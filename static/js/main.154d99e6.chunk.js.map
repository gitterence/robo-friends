{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","React","createElement","style","overflowY","border","height","children","Card","_ref","name","email","id","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","value","onChange","ErrorBoundary","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","setState","Component","App","_useState","useState","_useState2","_slicedToArray","setRobots","_useState3","_useState4","setsearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","event","target","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.154d99e6.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Scroll = (props) => {\n\n    return (\n        <div style={{ overflowY: 'scroll', border: '2px solid black', height: '600px' }}>\n            {props.children}\n        </div>\n    );\n    \n}\n\nexport default Scroll","import React from 'react';\n\n \nconst Card = ({ name, email, id }) => {  \n    return (  \n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot_image' src={`https://robohash.org/${id}?200x200`}></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p> \n            </div>\n\n        </div>\n    );  \n}\n\nexport default Card\n\n","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={i} \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email} \n                        />\n                    );\n                })\n            } \n        </div> \n    );\n \n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                value={searchfield}\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n \nexport default SearchBox","import React, { Component } from \"react\";\n\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Error found</h1>\n        }\n        return this.props.children\n    }\n\n}\n\nexport default ErrorBoundary","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nfunction App() {\n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setsearchfield] = useState('')\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                setRobots(users)\n            });\n    }, [])\n\n\n    const onSearchChange = (event) => {\n        setsearchfield(event.target.value)\n    }\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\n    })\n\n    return (!robots.length) ?\n        (<h1>Loading</h1>)\n        :\n        (\n            <div className='tc'>\n                <h1 className='f1'>Robo Friends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}